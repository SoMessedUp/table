{"ast":null,"code":"var _jsxFileName = \"/Users/journal/Desktop/gazprom-test/test-task/src/App.js\";\nimport './style.css';\nimport React, { useState, useEffect } from 'react';\nimport './article_def_v_orig.csv';\nimport * as Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const filePath = './article_def_v_orig.csv';\n  fetch(filePath).then(response => response.text()).then(responseText => {\n    // -- parse csv\n    var data = Papa.parse(responseText, {\n      header: true // Если CSV не имеет заголовков столбцов, устанавливаем header: false\n    }).data;\n\n    // -- extract first column\n    var firstColumn = data.map(row => row[0]);\n    console.log('First Column:', firstColumn);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table__row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table__element table__element-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table__element table__element-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table__element table__element-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table__element table__element-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table__element table__element-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","jsxDEV","_jsxDEV","App","filePath","fetch","then","response","text","responseText","data","parse","header","firstColumn","map","row","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/journal/Desktop/gazprom-test/test-task/src/App.js"],"sourcesContent":["import './style.css';\nimport React, { useState, useEffect } from 'react';\nimport './article_def_v_orig.csv'\nimport * as Papa from 'papaparse';\n\n\n\nfunction App() {\n    const filePath = './article_def_v_orig.csv';\n    fetch(filePath)\n    .then(response => response.text())\n    .then(responseText => {\n        // -- parse csv\n        var data = Papa.parse(responseText, {\n            header: true // Если CSV не имеет заголовков столбцов, устанавливаем header: false\n        }).data;\n        \n        // -- extract first column\n        var firstColumn = data.map(row => row[0]);\n\n        console.log('First Column:', firstColumn);\n    });\n\n\n  return (\n    <div className=\"table\">\n      <div className=\"table__row\">\n        <div className=\"table__element table__element-name\">\n\n        </div>\n        <div className=\"table__element table__element-name\">\n          \n          </div>\n          <div className=\"table__element table__element-name\">\n          \n          </div>\n          <div className=\"table__element table__element-name\">\n          \n          </div>\n          <div className=\"table__element table__element-name\">\n          \n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B;AACjC,OAAO,KAAKC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,SAASC,GAAGA,CAAA,EAAG;EACX,MAAMC,QAAQ,GAAG,0BAA0B;EAC3CC,KAAK,CAACD,QAAQ,CAAC,CACdE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,YAAY,IAAI;IAClB;IACA,IAAIC,IAAI,GAAGV,IAAI,CAACW,KAAK,CAACF,YAAY,EAAE;MAChCG,MAAM,EAAE,IAAI,CAAC;IACjB,CAAC,CAAC,CAACF,IAAI;;IAEP;IACA,IAAIG,WAAW,GAAGH,IAAI,CAACI,GAAG,CAACC,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC;IAEzCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,WAAW,CAAC;EAC7C,CAAC,CAAC;EAGJ,oBACEX,OAAA;IAAKgB,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBjB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBjB,OAAA;QAAKgB,SAAS,EAAC;MAAoC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9C,CAAC,eACNrB,OAAA;QAAKgB,SAAS,EAAC;MAAoC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5C,CAAC,eACNrB,OAAA;QAAKgB,SAAS,EAAC;MAAoC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9C,CAAC,eACNrB,OAAA;QAAKgB,SAAS,EAAC;MAAoC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9C,CAAC,eACNrB,OAAA;QAAKgB,SAAS,EAAC;MAAoC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GAtCQrB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}